package com.cloud.configservice.dao;

import com.cloud.configservice.model.ProjectEnvs;
import com.cloud.configservice.model.ProjectEnvsExample;
import org.apache.ibatis.annotations.*;

import java.text.MessageFormat;
import java.util.List;
import java.util.Map;

@Mapper
public interface ProjectEnvsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    long countByExample(ProjectEnvsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    int deleteByExample(ProjectEnvsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    int insert(ProjectEnvs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    int insertSelective(ProjectEnvs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    List<ProjectEnvs> selectByExample(ProjectEnvsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    ProjectEnvs selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") ProjectEnvs record, @Param("example") ProjectEnvsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") ProjectEnvs record, @Param("example") ProjectEnvsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(ProjectEnvs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_envs
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(ProjectEnvs record);

    /**
     * 根据项目的ID查询项目绑定的环境ID
     * @param id
     * @return
     */
    @ResultType(value = List.class)
    @Select("select envs_id from project_envs where projects_id = #{id}")
    List<Long> selectEnvIdsByProjectId(@Param("id") Long id);


    /**
     * 批量插入
     * @param list
     * @return
     */
    @InsertProvider(type = Provider.class,method = "batchInsert")
    int batchInsert(List<ProjectEnvs> list);

    class Provider{

        /**
         * 批量新增
         * @param map
         * @return
         */
        public String batchInsert(Map map){
            List<ProjectEnvs> list = (List<ProjectEnvs>) map.get("list");
            StringBuilder sb = new StringBuilder();
            sb.append("INSERT INTO project_envs (projects_id,envs_id) VALUES ");
            MessageFormat mf = new MessageFormat("(#'{'list[{0}].projectsId}, #'{'list[{0}].envsId})");
            for (int i = 0; i < list.size(); i++) {
                sb.append(mf.format(new Object[] {i}));
                if (i < list.size() - 1) {
                    sb.append(",");
                }
            }
            return sb.toString();
        }
    }
}